#!/bin/bash

VAULT_HOST=$(dig active.vault.service.consul | grep CNAME | sed -E 's/.*CNAME\s+([^ ]+)\.$/\1/')
export VAULT_ADDR=https://$VAULT_HOST:8200

export VAULT_TOKEN=$(vault write \
  -tls-skip-verify \
  -format=json \
  auth/kubernetes/$CLUSTER_NAME/login \
  role=$VAULT_ROLE \
  jwt=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) |
  jq -r ".auth.client_token"
  )

ARCHIVES_PATH=/root/archives
HOST=$1

set -e

certbot-auto \
  certonly \
  -n \
  --webroot \
  --webroot-path /usr/share/nginx/html \
  -d $HOST \
  -m $(vault read -field=email secret/certbot) \
  --agree-tos

cd /etc/letsencrypt/archive

function save_cert() {
  host_to_save=$1

  mkdir -p $ARCHIVES_PATH

  rm $ARCHIVES_PATH/$host_to_save.tar.gz* || true

  pushd /etc/letsencrypt/archive

  tar cvzf $ARCHIVES_PATH/$host_to_save.tar.gz $host_to_save
  base64 $ARCHIVES_PATH/$host_to_save.tar.gz > $ARCHIVES_PATH/$host_to_save.tar.gz.b64

  vault write secret/certs/$host_to_save \
    privkey.pem=@/etc/letsencrypt/live/$host_to_save/privkey.pem \
    fullchain.pem=@/etc/letsencrypt/live/$host_to_save/fullchain.pem \
    chain.pem=@/etc/letsencrypt/live/$host_to_save/chain.pem \
    cert.pem=@/etc/letsencrypt/live/$host_to_save/cert.pem \
    renewal=@/etc/letsencrypt/renewal/$host_to_save.conf \
    archive=@/root/archives/$host_to_save.tar.gz.b64 \
    ttl=$(openssl x509 -enddate -noout \
      -in /etc/letsencrypt/live/$host_to_save/fullchain.pem | python /root/ttl.py)

  popd
}

save_cert $HOST
